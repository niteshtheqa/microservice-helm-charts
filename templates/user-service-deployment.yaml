apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app: user-service
    run: user-service
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: user-service
      run: user-service
  template:
    metadata:
      labels:
        app: user-service
        run: user-service
    spec:
      containers:
        - name: user-service
          image: "{{ .Values.image.userService.repository }}:{{ .Values.image.userService.tag }}"
          resources:
            limits:
              cpu: {{ .Values.resources.userService.limits.cpu }}
              memory: {{ .Values.resources.userService.limits.memory }}
            requests:
              cpu: {{ .Values.resources.userService.requests.cpu }}
              memory: {{ .Values.resources.userService.requests.memory }}
          ports:
            - containerPort: 8081

        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mysql.rootPassword }}
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.dbName }}
            - name: MYSQL_USER
              value: {{ .Values.mysql.user }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.mysql.password }}
          ports:
            - containerPort: 3306
          resources:
            limits:
              cpu: {{ .Values.resources.mysql.limits.cpu }}
              memory: {{ .Values.resources.mysql.limits.memory }}
            requests:
              cpu: {{ .Values.resources.mysql.requests.cpu }}
              memory: {{ .Values.resources.mysql.requests.memory }}
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          emptyDir: {}  # Replace with PersistentVolumeClaim for persistent storage
