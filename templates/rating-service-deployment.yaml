apiVersion: apps/v1
kind: Deployment
metadata:
  name: rating-service
  labels:
    app: rating-service
    run: rating-service
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: rating-service
      run: rating-service
  template:
    metadata:
      labels:
        app: rating-service
        run: rating-service
    spec:
      containers:
        - name: rating-service
          image: "{{ .Values.image.ratingService.repository }}:{{ .Values.image.ratingService.tag }}"
          resources:
            limits:
              cpu: {{ .Values.resources.ratingService.limits.cpu }}
              memory: {{ .Values.resources.ratingService.limits.memory }}
            requests:
              cpu: {{ .Values.resources.ratingService.requests.cpu }}
              memory: {{ .Values.resources.ratingService.requests.memory }}
          ports:
            - containerPort: 8082

        - name: mongodb
          image: mongo:4.4
          env:
            - name: MONGO_INITDB_DATABASE
              value: {{ .Values.mongodb.dbName }}
            - name: MONGO_INITDB_ROOT_USERNAME
              value: {{ .Values.mongodb.user }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: {{ .Values.mongodb.rootPassword }}
          ports:
            - containerPort: 27017
          resources:
            limits:
              cpu: {{ .Values.resources.mongodb.limits.cpu }}
              memory: {{ .Values.resources.mongodb.limits.memory }}
            requests:
              cpu: {{ .Values.resources.mongodb.requests.cpu }}
              memory: {{ .Values.resources.mongodb.requests.memory }}
          volumeMounts:
            - name: mongodb-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongodb-persistent-storage
          emptyDir: {}  # You can replace this with a PersistentVolumeClaim for persistent storage
